{"version":3,"sources":["services/storage/local_storage.js","variables/variables.js","services/api/login_api.js","components/pages/login/LoginScreen.js","media/capture.js","media/media_constraints.js","components/primitives/CheckboxField.js","components/primitives/RadioBtns.js","components/constraints/Constraints.js","media/record.js","services/api/security.js","services/api/records_api.js","utils/download.js","components/filesPanel/FileList.js","components/controlPanel/ControlPanel.js","components/video/Video.js","components/video/VideoPanel.js","utils/wait.js","components/pages/recording/RecordingScreen.js","components/App.js","serviceWorker.js","index.js"],"names":["addToStorage","key","value","toString","window","localStorage","setItem","getFromStorage","getItem","removeFromStorage","removeItem","KEYS","SERVER_URL","location","origin","loginValue","a","fetch","method","response","text","token","console","log","React","Component","getMediaStream","recordOptions","captureStream","navigator","mediaDevices","getDisplayMedia","exportDiaplaMediaConstraints","grabMic","getUserMedia","video","audio","mic","addTrack","getAudioTracks","error","VIDEO_SIZES","AUTO","width","height","label","SMALL","MEDIUM","MediaConstraints","this","size","_size","_audio","echoCancellation","_echoCancellation","noiseSuppression","_noiseSuppression","_grabMic","newSize","newAudio","CheckboxField","props","isChecked","Form","Checkbox","checked","onChange","RadioBtns","currValue","values","labelField","Object","keys","map","textValue","Field","control","Radio","getRadioButtonsGroup","Constraints","onFieldChange","newC","merge","assign","constraints","onConstraintsChange","Group","inline","Recorder","stream","_stream","_rec","MediaRecorder","_data","ondataavailable","e","push","data","start","stopped","Promise","r","onstop","onerror","stop","getTracks","forEach","track","then","Blob","type","secured","init","headers","storageManager","json","responseData","formData","FormData","append","body","responseText","url","name","link","document","createElement","download","href","click","FileList","files","file","Table","Row","Cell","Button","icon","labelPosition","onClick","Icon","play","color","celled","Header","HeaderCell","Body","length","getFileRows","getPlaceholder","ControlPanel","uploadingOn","setState","state","uploading","uploadingOff","upload","recordApi","File","currentRecord","filename","onNewFileUpload","finally","handleFilenameChange","target","isRecording","currentRecordUrl","startRecording","stopRecording","disabled","Input","required","id","Or","process","loading","Video","videoElem","createRef","nextProps","nextState","nextContext","isEqual","videoSourceProps","recordUrl","lastRec","record","current","srcObject","src","URL","createObjectURL","mediaStream","prevProps","prevState","playerProps","pause","muted","currentTime","videoTrack","getVideoTracks","debug","JSON","stringify","getSettings","getConstraints","audioTrack","debugTrackSetup","loop","ref","title","VideoPanel","preventDefault","toggleMuted","placeholder","noVideo","Statistic","Value","find","v","Segment","wait","ms","resolve","setTimeout","RecordingScreen","loadFileList","recorder","filesCopy","concat","countdown","onHitPlay","videoPlaceHolder","Container","Grid","divided","columns","Column","App","isLoggedIn","loginSuccess","onLoginUpdate","bind","Boolean","hostname","match","require","config","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.def05775.chunk.js","sourcesContent":["\nexport default {\n  addToStorage,\n  getFromStorage,\n  removeFromStorage\n};\n\nexport const KEYS = {\n  LOGIN_TOKEN: \"LOGIN_TOKEN\"\n};\n\nfunction addToStorage(key, value) {\n  value = value.toString();\n  window.localStorage.setItem(key, value);\n}\n\nfunction getFromStorage(key) {\n  return window.localStorage.getItem(key);\n}\n\nfunction removeFromStorage(key) {\n  return window.localStorage.removeItem(key);\n}\n","const SUB_PATH = \"/records-manager\";\nexport const SERVER_URL = process.env.NODE_ENV === 'production' ? window.location.origin + SUB_PATH : 'http://localhost:8080';\nexport const UI_ONLY = process.env.REACT_APP_UI_ONLY;\n","import {SERVER_URL} from \"../../variables/variables\";\n\nexport async function login(loginValue) {\n  const response = await fetch(SERVER_URL + \"/login/\" + loginValue, {\n    method: 'POST'\n  })\n\n  let token = await response.text();\n  console.log(token);\n  return token;\n}\n","import React from 'react';\n\nimport {login} from \"../../../services/api/login_api\";\nimport storageManager, {KEYS} from \"../../../services/storage/local_storage\";\n\nclass LoginScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loginValue: undefined\n    }\n\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.submit = this.submit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState(Object.assign({}, {loginValue: e.target.value}));\n  }\n\n  submit(e) {\n    e.preventDefault();\n    login(this.state.loginValue)\n      .then(value => storageManager.addToStorage(KEYS.LOGIN_TOKEN, value))\n      .then(this.props.onLoginUpdate);\n  }\n\n  render() {\n    return (\n      <div>\n        Welcome, please log in to continue:\n        <div>\n          <input type=\"text\" onChange={this.handleLoginChange}/>\n          <button onClick={this.submit} disabled={!this.state.loginValue}>Submit</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LoginScreen;\n","/**\n * @param {MediaConstraints} recordOptions\n * */\nexport async function getMediaStream(recordOptions) {\n    let captureStream = null;\n\n    try {\n        captureStream = await navigator.mediaDevices.getDisplayMedia(recordOptions.exportDiaplaMediaConstraints());\n        if (recordOptions.grabMic) {\n            const mic = await navigator.mediaDevices.getUserMedia({video: false, audio: true});\n            captureStream.addTrack(mic.getAudioTracks()[0]);\n        }\n    } catch(err) {\n        console.error(\"Error: \" + err);\n    }\n    return captureStream;\n}\n\nexport function debugTrackSetup(video) {\n    if (video.srcObject) {\n        const videoTrack = video.srcObject.getVideoTracks()[0];\n\n        console.debug(\"Track settings:\");\n        console.debug(JSON.stringify(videoTrack.getSettings(), null, 2));\n        console.debug(\"Track constraints:\");\n        console.debug(JSON.stringify(videoTrack.getConstraints(), null, 2));\n\n        const audioTrack = video.srcObject.getAudioTracks()[0];\n        if(audioTrack) {\n            console.debug(\"Track settings:\");\n            console.debug(JSON.stringify(audioTrack.getSettings(), null, 2));\n            console.debug(\"Track constraints:\");\n            console.debug(JSON.stringify(audioTrack.getConstraints(), null, 2));\n        }\n    }\n}\n","export const VIDEO_SIZES = {\n    AUTO: {width: 0, height: 0, label: \"Auto\"},\n    SMALL: {width: 600, height: 400, label: \"600x400\"},\n    MEDIUM: {width: 1280, height: 720, label: \"1280x720\"}\n}\n\nexport class MediaConstraints {\n    constructor() {\n        this.size = VIDEO_SIZES.AUTO;\n    }\n\n    exportDiaplaMediaConstraints() {\n        return {\n            video: this._size === VIDEO_SIZES.AUTO ? true : {\n                width: this._size.width,\n                height: this._size.height\n            },\n            audio: this._audio && {\n                echoCancellation: this._echoCancellation,\n                noiseSuppression: this._noiseSuppression,\n            },\n            grabMic: this._grabMic\n        }\n    }\n\n    get size() {\n        return this._size;\n    }\n\n    set size(newSize) {\n        this._size = newSize;\n    }\n\n    get audio() {\n        return this._audio;\n    }\n\n    set audio(newAudio) {\n        this._audio = newAudio;\n    }\n\n    get echoCancellation() {\n        return this._echoCancellation;\n    }\n\n    set echoCancellation(echoCancellation) {\n        this._echoCancellation = echoCancellation;\n    }\n\n    get noiseSuppression() {\n        return this._noiseSuppression;\n    }\n\n    set noiseSuppression(noiseSuppression) {\n        this._noiseSuppression = noiseSuppression;\n    }\n\n    get grabMic() {\n        return this._grabMic;\n    }\n\n    set grabMic(value) {\n        this._grabMic = value;\n    }\n}\n","import React from 'react';\nimport {Form} from 'semantic-ui-react'\n\n\nclass CheckboxField extends React.Component {\n\n    render() {\n        const {isChecked, label} = this.props;\n\n        return (\n          <Form.Checkbox label={label} checked={!!isChecked} onChange={() => this.props.onChange(!isChecked)}/>\n        );\n    }\n}\n\nexport default CheckboxField;\n","import React from 'react';\nimport {Form, Radio} from 'semantic-ui-react'\n\n\nclass RadioBtns extends React.Component {\n\n  getRadioButtonsGroup(currValue, values, labelField, onChange) {\n    return Object.keys(values).map((key) => {\n      const value = values[key];\n      let textValue = value[labelField];\n\n      return <Form.Field\n        control={Radio}\n        key={textValue + \"_radio\"}\n        onChange={() => onChange(value)}\n        value={textValue}\n        checked={currValue === value}\n        label={textValue}/>\n    });\n  }\n\n  render() {\n    const {value, values, labelField, onChange} = this.props;\n\n    return this.getRadioButtonsGroup(value, values, labelField, onChange);\n  }\n}\n\nexport default RadioBtns;\n","import React from 'react';\nimport {MediaConstraints, VIDEO_SIZES} from \"../../media/media_constraints\";\nimport CheckboxField from \"../primitives/CheckboxField\";\nimport RadioBtns from \"../primitives/RadioBtns\";\nimport {Form} from \"semantic-ui-react\";\n\n\nclass Constraints extends React.Component {\n\n  onFieldChange = (newC) => {\n    const merge = Object.assign(new MediaConstraints(), this.props.constraints, newC);\n    this.props.onConstraintsChange(Object.assign({}, {constraints: merge}));\n  }\n\n  render() {\n    const {constraints} = this.props;\n\n    return (\n      <Form>\n        <Form.Group inline>\n          <RadioBtns onChange={(value) => this.onFieldChange({size: value})} value={constraints.size}\n                     values={VIDEO_SIZES} labelField={\"label\"}/>\n        </Form.Group>\n        <Form.Group inline>\n          <CheckboxField onChange={(value) => this.onFieldChange({grabMic: value})} isChecked={constraints.grabMic}\n                         label={\"Grab mic\"}/>\n          <CheckboxField onChange={(value) => this.onFieldChange({audio: value})} isChecked={constraints.audio}\n                         label={\"Grab audio\"}/>\n          {constraints.audio && <CheckboxField onChange={(value) => this.onFieldChange({noiseSuppression: value})}\n                                               isChecked={constraints.noiseSuppression} label={\"Noise Suppression\"}/>}\n          {constraints.audio && <CheckboxField onChange={(value) => this.onFieldChange({echoCancellation: value})}\n                                               isChecked={constraints.echoCancellation} label={\"Echo Cancellation\"}/>}\n        </Form.Group>\n      </Form>\n    )\n      ;\n  }\n}\n\nexport default Constraints;\n","export class Recorder {\n    _data;\n    _stream;\n\n    constructor(stream) {\n        this._stream = stream;\n    }\n\n    start() {\n        this._rec = new MediaRecorder(this._stream);\n        this._data = [];\n        this._rec.ondataavailable = e => {\n            this._data.push(e.data);\n        }\n        this._rec.start();\n    }\n\n    stop() {\n        const stopped = new Promise((r, e) => {\n            this._rec.onstop = r;\n            this._rec.onerror = e;\n        });\n        this._rec.stop();\n        this._stream.getTracks().forEach(track => track.stop());\n        return stopped.then(() => {\n            return new Blob(this._data, { type: \"video/webm\" });\n        });\n    }\n\n    get data() {\n        return this._data;\n    }\n\n}","import storageManager, {KEYS} from \"../storage/local_storage\";\n\nexport function secured(init) {\n  const headers = init.headers || {};\n  headers[\"jwt_token\"] = storageManager.getFromStorage(KEYS.LOGIN_TOKEN);\n  let assign = Object.assign(init, {headers});\n  return assign;\n}\n","import {secured} from \"./security\";\nimport {SERVER_URL} from \"../../variables/variables\";\n\nexport async function listFiles() {\n  const response = await fetch(SERVER_URL + \"/records\",\n    secured({'method': \"GET\"}));\n\n  const responseData = await response.json();\n  console.log(responseData);\n  return responseData;\n}\n\n\nexport async function uploadRecord(data) {\n  const formData = new FormData();\n  formData.append('file', data);\n\n\n  const response = await fetch(SERVER_URL + \"/records\",\n    secured({\n      method: 'post',\n      body: formData\n    }));\n\n  const responseText = await response.text();\n  console.log(responseText);\n  return responseText;\n}\n","\n\nexport default (url, name) => {\n  const link = document.createElement('a');\n  link.download = name;\n  link.href = url;\n  link.click();\n}\n","import React from 'react';\nimport {Table} from \"semantic-ui-react\";\nimport download from \"../../utils/download\";\nimport { Icon, Button } from 'semantic-ui-react'\n\nclass FileList extends React.Component {\n  getFileRows(files) {\n    return files.map(file => (<Table.Row key={file.name + \"_table_row\"}>\n      <Table.Cell key={file.name + \"_table_cell_name\"}>\n        {file.name}\n      </Table.Cell>\n      <Table.Cell key={file.name + \"_table_cell_button_download\"}>\n        <Button icon labelPosition='right' key={file.name + \"_table_cell_download_button\"} onClick={() => download(file.url, file.name)}>\n          Download\n            <Icon name='download' key={file.name + \"_table_cell_download_icon\"}/>\n        </Button>\n      </Table.Cell>\n        <Table.Cell key={file.name + \"_table_cell_button_play\"}>\n        <Button icon labelPosition='right' key={file.name + \"_table_cell_play_button\"} onClick={() => this.props.play(file)}>\n          Load\n            <Icon name='play' color='green' key={file.name + \"_table_cell_play_icon\"}/>\n        </Button>\n      </Table.Cell>\n    </Table.Row>));\n  }\n\n  getPlaceholder() {\n    return [{name: \"1\"}, {name: \"2\"}].map(file => (<Table.Row key={file.name + \"_table_row\"}>\n      <Table.Cell key={file.name + \"_table_cell_name\"}>\n      </Table.Cell>\n      <Table.Cell key={file.name + \"_table_cell_button_download\"}>\n      </Table.Cell>\n        <Table.Cell key={file.name + \"_table_cell_button_play\"}>\n      </Table.Cell>\n    </Table.Row>));\n  }\n\n  render() {\n    const {files} = this.props;\n\n    return (\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Files</Table.HeaderCell>\n            <Table.HeaderCell/>\n            <Table.HeaderCell/>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {files.length ? this.getFileRows(files) : this.getPlaceholder()}\n        </Table.Body>\n      </Table>\n    )\n      ;\n  }\n}\n\nexport default FileList;\n","import React from 'react';\nimport {Button, Form} from \"semantic-ui-react\";\nimport * as recordApi from \"../../services/api/records_api\";\nimport download from \"../../utils/download\";\nimport {UI_ONLY} from \"../../variables/variables\";\n\nconst WEBM_EXT = \".webm\";\n\nclass ControlPanel extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {filename: \"\", uploading: false};\n  }\n\n  uploadingOn = async () => {\n    this.setState(Object.assign({}, this.state, {uploading: true}));\n  }\n  uploadingOff = async () => {\n    this.setState(Object.assign({}, this.state, {uploading: false}));\n  }\n\n  upload = () => {\n    this.uploadingOn().then(() => {\n      return recordApi.uploadRecord(new File([this.props.currentRecord], this.state.filename + WEBM_EXT))\n        .then(this.props.onNewFileUpload);\n    }).finally(this.uploadingOff);\n  }\n\n\n  handleFilenameChange = (e) => {\n    this.setState(Object.assign({}, this.state, {filename: e.target.value}));\n  }\n\n  render() {\n    const {isRecording, currentRecordUrl, startRecording, stopRecording} = this.props;\n    const {filename} = this.state;\n\n    return (\n      <Form.Group>\n        <Form.Button onClick={startRecording}>Record</Form.Button>\n        <Form.Button onClick={stopRecording} disabled={!isRecording}>Stop</Form.Button>\n        <div>\n          <Form.Input onChange={this.handleFilenameChange} value={filename} label={\"File name\"}\n                      required={true}/>\n          <Button.Group>\n            <Form.Button icon='download'\n                         id=\"downloadRecord\"\n                         onClick={() => download(currentRecordUrl, filename)}\n                         disabled={!currentRecordUrl || !filename}>Download</Form.Button>\n            <Button.Or text='or'/>\n            <Form.Button onClick={this.upload}\n                         target=\"_blank\"\n                         disabled={!currentRecordUrl || !filename || UI_ONLY}\n                         loading={this.state.uploading}>Upload\n            </Form.Button>\n          </Button.Group>\n        </div>\n      </Form.Group>\n    )\n      ;\n  }\n}\n\nexport default ControlPanel;\n","import React from 'react';\nimport isEqual from 'lodash.isequal';\nimport {debugTrackSetup} from \"../../media/capture\";\n\nclass Video extends React.Component {\n  constructor(props) {\n    super(props);\n    this.videoElem = React.createRef();\n  }\n\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\n    return !isEqual(nextProps, this.props);\n  }\n\n  componentDidMount() {\n    // TODO extract\n    const {recordUrl, lastRec, record} = this.props.videoSourceProps;\n\n    this.videoElem.current.srcObject = null;\n    this.videoElem.current.src = \"\";\n    if (recordUrl) {\n      this.videoElem.current.src = recordUrl;\n    } else if (lastRec) {\n      this.videoElem.current.src = window.URL.createObjectURL(record);\n    } else {\n      this.videoElem.current.srcObject = this.props.mediaStream;\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (!isEqual(prevProps.videoSourceProps, this.props.videoSourceProps)) {\n      const {recordUrl, lastRec, record} = this.props.videoSourceProps;\n\n      this.videoElem.current.srcObject = null;\n      this.videoElem.current.src = \"\";\n      if (recordUrl) {\n        this.videoElem.current.src = recordUrl;\n      } else if (lastRec) {\n        this.videoElem.current.src = window.URL.createObjectURL(record);\n      } else {\n        this.videoElem.current.srcObject = this.props.mediaStream;\n      }\n    }\n\n    if (!isEqual(prevProps.playerProps.videoSourceProps, this.props.playerProps)) {\n      const {play, pause, stop, muted} = this.props.playerProps;\n      if (play) {\n        this.videoElem.current.play();\n      }\n      if (pause) {\n        this.videoElem.current.pause();\n      }\n      if (stop) {\n        this.videoElem.current.pause();\n        this.videoElem.current.currentTime = 0;\n      }\n      this.videoElem.current.muted = muted;\n    }\n\n\n    debugTrackSetup(this.videoElem.current);\n  }\n\n  render() {\n    const {width = 550, height = 400} = this.props;\n    return (\n      <video id=\"video\"\n             loop\n             ref={this.videoElem}\n             width={width}\n             height={height}\n             title={\"main vid\"}/>\n    );\n  }\n}\n\nexport default Video;\n","import React from 'react';\nimport {Button, Header, Icon, Segment, Statistic} from \"semantic-ui-react\";\nimport Video from \"./Video\";\n\n\nclass VideoPanel extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {play: false, pause: false, stop: true, muted: false};\n  }\n\n  play = (e) => {\n    e.preventDefault();\n    this.setState(Object.assign({}, this.state, {play: true, pause: false, stop: false}));\n  }\n  pause = (e) => {\n    e.preventDefault();\n    this.setState(Object.assign({}, this.state, {play: false, pause: true, stop: false}));\n  }\n  stop = (e) => {\n    e.preventDefault();\n    this.setState(Object.assign({}, this.state, {play: false, pause: false, stop: true}));\n  }\n  toggleMuted = (e) => {\n    e.preventDefault();\n    this.setState(Object.assign({}, this.state, {muted: !this.state.muted}));\n  }\n\n  getPlaceholder(placeholder, noVideo) {\n    if (placeholder === \"Recording\") {\n      return <Header icon>\n        <Icon name='record' color='red'/>\n        Recording\n      </Header>;\n    } else if (placeholder > 0 && placeholder <= 3) {\n      return <Statistic>\n        <Statistic.Value>{placeholder}</Statistic.Value>\n      </Statistic>\n    }\n\n    if (noVideo) {\n      return <Header icon>\n        <Icon name='file video' color='grey'/>\n      </Header>\n    }\n  }\n\n  render() {\n    const {videoSourceProps, placeholder} = this.props;\n    const {play, pause, stop, muted} = this.state;\n    const noVideo = !Object.values(videoSourceProps).find(v => v !== null);\n    const video = <Video videoSourceProps={videoSourceProps} playerProps={Object.assign({}, this.state)}/>;\n    return (\n      <div>\n        <Segment placeholder>\n          {(noVideo || placeholder) && this.getPlaceholder(placeholder, noVideo)}\n          {!noVideo && !placeholder && video}\n        </Segment>\n        <Segment>\n          <Button icon onClick={this.play} disabled={noVideo || play}>\n            <Icon name='play' color='green'/>\n          </Button>\n          <Button icon onClick={this.pause} disabled={noVideo || pause || stop}>\n            <Icon name='pause' color='grey'/>\n          </Button>\n          <Button icon onClick={this.stop} disabled={noVideo || stop}>\n            <Icon name='stop' color='grey'/>\n          </Button>\n          <Button icon onClick={this.toggleMuted}>\n            {muted ? <Icon name='volume off' color='grey'/> : <Icon name='volume up' color='grey'/>}\n          </Button>\n        </Segment>\n      </div>\n    )\n      ;\n  }\n}\n\nexport default VideoPanel;\n","export const wait = ms => new Promise(resolve => setTimeout(resolve, ms));\n","import React from 'react';\nimport './RecordingScreen.css';\nimport {getMediaStream} from \"../../../media/capture\";\nimport Constraints from \"../../constraints/Constraints\";\nimport {MediaConstraints} from \"../../../media/media_constraints\";\nimport {Recorder} from \"../../../media/record\";\nimport * as recordApi from \"../../../services/api/records_api\";\nimport {Container, Form, Grid, Segment} from 'semantic-ui-react'\nimport FileList from \"../../filesPanel/FileList\";\nimport ControlPanel from \"../../controlPanel/ControlPanel\";\nimport VideoPanel from \"../../video/VideoPanel\";\nimport {wait} from \"../../../utils/wait\";\nimport {UI_ONLY} from \"../../../variables/variables\";\n\n\nclass RecordingScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mediaStream: null,\n      constraints: new MediaConstraints(),\n      recorder: null,\n      currentRecord: null,\n      currentRecordUrl: null,\n      files: [],\n      countdown: 0\n    };\n  }\n\n  componentDidMount() {\n    if(!UI_ONLY) this.loadFileList();\n  }\n\n  loadFileList = () => {\n    recordApi.listFiles()\n      .then((files) => {\n        this.setState(Object.assign({}, this.state, {files: files}));\n      });\n  }\n\n  stopRecording = () => {\n    if (this.state.recorder) {\n      this.state.recorder.stop().then(record => {\n        const currentRecordUrl = URL.createObjectURL(record);\n        const filesCopy = this.state.files.concat({name: \"video\" + this.state.files.length, url: currentRecordUrl});\n        this.setState(Object.assign({}, this.state, {\n          mediaStream: null,\n          recorder: null,\n          currentRecord: record,\n          currentRecordUrl: currentRecordUrl,\n          files: filesCopy\n        }));\n      });\n    }\n  }\n\n  countdown = async () => {\n    const SECOND = 1000;\n    return wait(1)\n      .then(() => this.setState(Object.assign({}, this.state, {countdown: 3})))\n      .then(() => wait(SECOND))\n      .then(() => this.setState(Object.assign({}, this.state, {countdown: 2})))\n      .then(() => wait(SECOND))\n      .then(() => this.setState(Object.assign({}, this.state, {countdown: 1})))\n      .then(() => wait(SECOND))\n      .then(() => this.setState(Object.assign({}, this.state, {countdown: 0})));\n  }\n\n  startRecording = async () => {\n    const mediaStream = await getMediaStream(this.state.constraints);\n    if (mediaStream) {\n      const recorder = new Recorder(mediaStream);\n      this.countdown().then(()=> {\n        recorder.start();\n        this.setState(Object.assign({}, this.state, {\n          mediaStream,\n          recorder: recorder,\n          currentRecord: null,\n          currentRecordUrl: null\n        }));\n      })\n    }\n  }\n\n  onHitPlay = (file) => {\n    this.setState({\n      mediaStream: null,\n      constraints: new MediaConstraints(),\n      recorder: null,\n      currentRecord: file,\n      currentRecordUrl: file.url,\n      files: this.state.files\n    });\n  }\n\n  onConstraintsChange = (constraints) => {\n    this.setState(Object.assign({}, this.state, constraints))\n  }\n\n  onNewFileUpload = () => {\n    this.loadFileList();\n  }\n\n\n  render() {\n    const {mediaStream, currentRecord, currentRecordUrl, constraints, files, countdown, recorder} = this.state;\n\n    let videoPlaceHolder;\n    if (countdown > 0) {\n      videoPlaceHolder = countdown;\n    } else if (recorder) {\n      videoPlaceHolder = \"Recording\";\n    }\n\n    return (\n      <Container>\n        <Segment>\n          <Grid divided='vertically'>\n            <Grid.Row columns={2}>\n              <Grid.Column width={9}>\n                <VideoPanel videoSourceProps={{mediaStream, record: currentRecord, recordUrl: currentRecordUrl}} placeholder={videoPlaceHolder}/>\n                <Segment>\n                  <Form>\n                    <Constraints onConstraintsChange={this.onConstraintsChange} constraints={constraints}/>\n                    <ControlPanel isRecording={!!mediaStream}\n                                  currentRecord={currentRecord}\n                                  currentRecordUrl={currentRecordUrl}\n                                  stopRecording={this.stopRecording}\n                                  startRecording={this.startRecording}\n                                  onNewFileUpload={this.onNewFileUpload}\n                    />\n                  </Form>\n                </Segment>\n              </Grid.Column>\n              {<Grid.Column width={5}>\n                <FileList files={files} play={this.onHitPlay}/>\n              </Grid.Column>}\n            </Grid.Row>\n          </Grid>\n        </Segment>\n      </Container>\n    );\n  }\n}\n\nexport default RecordingScreen;\n","import React from 'react';\nimport './App.css';\nimport storageManager, {KEYS} from \"../services/storage/local_storage\";\nimport LoginScreen from \"./pages/login/LoginScreen\";\nimport RecordingScreen from \"./pages/recording/RecordingScreen\";\nimport {Container} from 'semantic-ui-react'\nimport {UI_ONLY, WITH_SERVER} from \"../variables/variables\";\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    const isLoggedIn = !!storageManager.getFromStorage(KEYS.LOGIN_TOKEN);\n    this.state = {loginSuccess: isLoggedIn};\n\n    this.onLoginUpdate = this.onLoginUpdate.bind(this);\n  }\n\n  onLoginUpdate() {\n    let loginSuccess = !!storageManager.getFromStorage(KEYS.LOGIN_TOKEN);\n    this.setState(Object.assign({}, {loginSuccess}));\n  }\n\n\n  render() {\n    const isLoggedIn = this.state.loginSuccess;\n    return (\n      <Container>\n        {isLoggedIn || UI_ONLY ? <RecordingScreen/> : <LoginScreen onLoginUpdate={this.onLoginUpdate}/>}\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. Video is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css'\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nrequire('dotenv').config()\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}